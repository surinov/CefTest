<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="contextMenuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAABMLAAATCwAAAAAAAAAA
        AAAAAAABAAAAHwAAAC8AAAAvAAAALwAAAC8AAAAvAAAALwAAAC8AAAAvAAAALwAAAC8AAAAvAAAALwAA
        AC8AAAAvAAAALwAAAC8AAAAvAAAALwAAAC8AAAAvAAAALwAAAC8AAAAvAAAALAAAAA0AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAACsAAADKAAAA6AAAAOcAAADnAAAA5wAAAOcAAADnAAAA5wAAAOcAAADnAAAA5wAA
        AOcAAADnAAAA5wAAAOcAAADnAAAA5wAAAOcAAADnAAAA5wAAAOcAAADnAAAA5wAAAOcAAADoAAAAigAA
        AAMAAAAAAAAAAAAAAAAAAAAAAAAASQAAAPYAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAADDAAAACwAAAAAAAAAAAAAAAAAAAAAAAABIAAAA9AAAAP8AAAC5AAAAggAAAIQAAACEAAAAhAAA
        AIQAAACEAAAAhAAAAIQAAACEAAAAhAAAAIQAAACEAAAAhAAAAIQAAACEAAAAhAAAAIQAAACEAAAAhAAA
        AIgAAADeAAAA/wAAAMIAAAALAAAAAAAAAAAAAAAAAAAAAAAAAEgAAAD0AAAA/wAAAGwAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAABQAAALoAAAD/AAAAwgAAAAsAAAAAAAAAAAAAAAAAAAAAAAAASAAAAPQAAAD/AAAAbgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAIAAAAuwAAAP8AAADCAAAACwAAAAAAAAAAAAAAAAAAAAAAAABIAAAA9AAA
        AP8AAABuAAAAAAAAAAAAAAADAAAABQAAAAUAAAAFAAAABQAAAAUAAAAFAAAABQAAAAUAAAAFAAAABQAA
        AAUAAAAFAAAABQAAAAUAAAACAAAAAAAAAAgAAAC7AAAA/wAAAMIAAAALAAAAAAAAAAAAAAAAAAAAAAAA
        AEgAAAD0AAAA/wAAAG4AAAAAAAAAAAAAAG8AAAC3AAAAtAAAALQAAAC0AAAAtAAAALQAAAC0AAAAtAAA
        ALQAAAC0AAAAtAAAALQAAAC0AAAArwAAADMAAAAAAAAACAAAALsAAAD/AAAAwgAAAAsAAAAAAAAAAAAA
        AAAAAAAAAAAASAAAAPQAAAD/AAAAbgAAAAAAAAAAAAAAlgAAAPcAAADzAAAA8wAAAPMAAADzAAAA8wAA
        APMAAADzAAAA8wAAAPMAAADzAAAA8wAAAPMAAADtAAAARgAAAAAAAAAIAAAAuwAAAP8AAADCAAAACwAA
        AAAAAAAAAAAAAAAAAAAAAABIAAAA9AAAAP8AAABuAAAAAAAAAAAAAAAeAAAAMgAAADEAAAAxAAAAMQAA
        ADEAAAAxAAAAMQAAADEAAAAxAAAAMQAAADEAAAAxAAAAMQAAADAAAAAOAAAAAAAAAAgAAAC7AAAA/wAA
        AMIAAAALAAAAAAAAAAAAAAAAAAAAAAAAAEgAAAD0AAAA/wAAAG4AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAA
        ALsAAAD/AAAAwgAAAAsAAAAAAAAAAAAAAAAAAAAAAAAASAAAAPQAAAD/AAAAbgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAIAAAAvQAAAP8AAADEAAAACwAAAAAAAAAAAAAAAAAAAAAAAABIAAAA9AAAAP8AAABuAAAAAAAA
        AAAAAABVAAAAjQAAAIsAAACLAAAAiwAAAIsAAACLAAAAiwAAAIwAAAB8AAAAEwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAABUAAAAeAAAAFkAAAAFAAAAAAAAAAAAAAAAAAAAAAAAAEgAAAD0AAAA/wAA
        AG4AAAAAAAAAAAAAAKIAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAOsAAAAkAAAAAAAA
        AAAAAAA/AAAAcgAAAHAAAABwAAAAaQAAABMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAASAAA
        APQAAAD/AAAAbgAAAAAAAAAAAAAAaAAAAKwAAACqAAAAqgAAAKoAAACqAAAAqgAAAKoAAACrAAAAmAAA
        ABcAAAAAAAAAAAAAAJIAAAD/AAAA/wAAAP8AAADxAAAAMwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAABIAAAA9AAAAP8AAABuAAAAAAAAAAAAAAACAAAAAgAAAAIAAAACAAAAAgAAAAIAAAACAAAAAgAA
        AAIAAAACAAAAAAAAAAAAAAAAAAAAkQAAAP8AAAD/AAAA/wAAAO8AAAAzAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAEgAAAD0AAAA/wAAAG4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACRAAAA/wAAAP8AAAD/AAAA7wAAADMAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAASAAAAPQAAAD/AAAAbgAAAAAAAAAAAAAAPAAAAGQAAABiAAAAYgAA
        AGMAAABSAAAACQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJEAAAD/AAAA/wAAAP8AAADvAAAAMwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABIAAAA9AAAAP8AAABuAAAAAAAAAAAAAACfAAAA/wAA
        AP8AAAD/AAAA/wAAANkAAAAXAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkQAAAP8AAAD/AAAA/wAA
        AO8AAAAzAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEgAAAD0AAAA/wAAAG4AAAAAAAAAAAAA
        AH4AAADQAAAAzAAAAMwAAADOAAAArAAAABMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACRAAAA/wAA
        AP8AAAD/AAAA7wAAADMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAASAAAAPQAAAD/AAAAbgAA
        AAAAAAAAAAAACgAAABAAAAAQAAAAEAAAABAAAAAOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AI8AAAD/AAAA/wAAAP8AAADvAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABIAAAA9AAA
        AP8AAABuAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAfAAAATgAAAE4AAABNAAAATQAA
        AE0AAABMAAAAsgAAAP8AAAD/AAAA/wAAAPYAAACSAAAAdAAAAHQAAABzAAAAcgAAAHQAAABbAAAADAAA
        AEgAAAD0AAAA/wAAAG0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABsAAACzAAAA/QAA
        APsAAAD6AAAA+gAAAPoAAAD9AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA7gAA
        AFsAAAACAAAASAAAAPQAAAD/AAAAggAAACAAAAAjAAAAIwAAACMAAAAjAAAAIwAAACMAAAAkAAAAGwAA
        ACEAAAC3AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AOwAAABbAAAAAAAAAAAAAABJAAAA9AAAAP8AAADwAAAA5AAAAOQAAADkAAAA5AAAAOQAAADkAAAA5AAA
        AOUAAADbAAAATgAAABsAAAC2AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAADtAAAAXQAAAAAAAAAAAAAAAAAAAEYAAAD1AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAADdAAAAMQAAABsAAAC1AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA7gAAAF8AAAAAAAAAAAAAAAAAAAAAAAAAHAAAALAAAADaAAAA2AAAANgAAADYAAAA2AAA
        ANgAAADYAAAA2AAAANgAAADYAAAA2AAAANsAAACTAAAABgAAABwAAAC0AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAO4AAABgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADQAAABkAAAAYAAAAGAAA
        ABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAGQAAABcAAAAEAAAAAAAAABwAAACzAAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAADvAAAAYgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ABsAAACyAAAA/wAAAP8AAAD/AAAA8AAAAGMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAABoAAACwAAAA/wAAAPEAAABlAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABoAAACiAAAAZwAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoAAAADAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAABwAAAAcAAAAHAAAABwAAAAcAAAAHAAAABwAAAAcAAAAHAAAABwAA
        AAcAADwHAAAABwAAAAcAAAA/AAAAPwAAAD8AA4A/AAOAPwADgD8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAEAAAADAAAABwAAAA///wAf//+AP///wH8=
</value>
  </data>
</root>